#: import main main

WeatherRoot:
<WeatherRoot>:
    AddLocationForm

<AddLocationForm>:
    canvas:
        Color:
            rgb: [1,1,1]
        Line:
            points:[self.pos[0], self.pos[1], self.width, self.pos[1]]    
    orientation: "vertical"
	search_input: search_box
	search_results: search_results_list
	background_color: 0.3,.1,.8,.5
	BoxLayout:
	    height: "40dp"
		size_hint_y: None
        TextInput:
            id:search_box
		    size_hint_x: 50
		    multiline:False
		    focus:True
		    on_text_validate: root.search_location()
		Button:
		    size_hint_x: 25
		    text: "Search" 
		    on_press: root.search_location()
		Button:
            size_hint_x: 25		
			text: "Current Location"
			on_press: app.root.show_locations()
    # ListView:
    #     id: search_results_list
	#     # adapter:
	#     #     ListAdapter(data=[],cls=main.LocationButton)
    Label:
	    font_size: "20dp"
	    text: root.cities       
    Button:
        height: "40dp"
        size_hint_y: None
        text:"cancel"
        on_press: app.root.show_current_weather(None)
        background_color: .08,.5,.1,.8

<LocationButton>:
    on_press: app.root.show_current_weather(self.text)	        
	

<CurrentWeather>:
    orientation: "vertical"
    BoxLayout:
        orientation: "horizontal"
        Label: 
            font_size: "20dp"
            text: root.location
        Label: 
            font_size: "20dp"
            text: "Temp: {} ".format(root.temp)
    BoxLayout:        
        Label:
            font_size: "30dp"
            text: root.conditions
        AsyncImage:
            source: root.conditions_image    
    BoxLayout:
        orientation: "horizontal"
        Label: 
            font_size: "20dp"
            text: "Max Temp: {} ".format(root.temp_max)
        Label: 
            font_size: "20dp"
            text: "Min Temp: {} ".format(root.temp_min)
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Show Locations"
            on_press: app.root.show_locations()
        Button:
            text: "Forecast"
            on_press: app.root.show_forecast()



<Locations@BoxLayout>:
    orientation: "vertical"
    location_list: location_list 
    ListView:
        id: location_list
        adapter:
            ListAdapter(data=[],cls=main.LocationButton)
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Add Location"
            on_press: app.root.show_add_location_form()
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Clear List"
            on_press: app.root.clear_location_list()






<ForecastLabel@BoxLayout>:
    date: ""
    conditions_image: ""
    conditions: ""
    temp_min: None
    temp_max: None
    canvas.before:
        Color:
            rgb: [0.2,0.2,0.2]
        Line:
            points:[self.pos[0], self.pos[1], self.width, self.pos[1]]
    Label:
        text: root.date
    BoxLayout:
        orientation: "vertical"
        AsyncImage:
            source: root.conditions_image
        Label:
            text: root.conditions
    BoxLayout:
        orientation: "vertical"
        Label:
            text: "Low: {}".format(root.temp_min)
        Label:
            text: "High: {}".format(root.temp_max)




<Forecast>:
    forecast_container:forecast_container
    orientation: "vertical" 
    Label:
        size_hint_y: 0.1
        font_size: "30dp"
        text: "{}".format(root.location)  
    BoxLayout:
        orientation: "vertical"
        id: forecast_container       
    BoxLayout:
        orientation: "horizontal"
        size_hint_y: None
        height: "40dp"
        Button:
            text: "Current"
            on_press: app.root.show_current_weather(root.location)                   

     
